{"version":3,"sources":["lib.js"],"names":["SFAbstractCrypto","DefaultPBKDF2Length","crypto","window","msCrypto","buf","Uint32Array","getRandomValues","idx","replace","c","r","v","toString","d","Date","getTime","performance","now","uuid","Math","random","floor","ciphertextToAuth","contentCiphertext","encryptionKey","iv","authHash","authKey","requiresAuth","console","error","hmac256","localAuthHash","keyData","CryptoJS","enc","Hex","parse","ivData","decrypted","AES","decrypt","mode","CBC","padding","pad","Pkcs7","Utf8","text","key","encrypted","encrypt","bits","lib","WordArray","length","cost","generateRandomKey","salt","passphrase","pbkdf2","substring","btoa","base64String","atob","SHA256","message","messageData","result","HmacSHA256","identifier","version","nonce","sha256","join","password","pw_salt","pw_cost","output","outputLength","splitLength","firstThird","slice","secondThird","thirdThird","authParams","generateSalt","pw_nonce","generateSymmetricKeyPair","then","keys","userKeys","pw","mk","ak","SFJS","defaultPasswordGenerationCost","SFCryptoJS","params","keySize","hasher","algo","SHA512","iterations","PBKDF2","subtleCrypto","subtle","SFCryptoWeb","webCryptoImportKey","log","webCryptoDeriveBits","input","importKey","stringToArrayBuffer","name","catch","err","hash","deriveBits","arrayBufferToHexString","Uint8Array","string","TextEncoder","encoder","encode","unescape","encodeURIComponent","ArrayBuffer","bufView","i","strLen","charCodeAt","arrayBuffer","byteArray","hexString","nextHexByte","byteLength","SFItemTransformer","encryptText","fullCiphertext","item","generateRandomEncryptionKey","item_key","enc_item_key","_private_encryptString","firstHalfOfKey","ek","secondHalfOfKey","JSON","stringify","createContentJSONFromProperties","ciphertext","auth_hash","content","encryptionVersion","components","split","startsWith","base64Decode","encryptedItemKey","keyParams","encryptionComponentsFromString","errorDecrypting","errorDecryptingValueChanged","decryptText","itemParams","items","throws","deleted","isString","String","decryptItem","Promise","all","map","StandardFile","cryptoInstance","document","IEOrEdge","documentMode","test","navigator","userAgent","itemTransformer","libraryVersion","parseInt","expirationDates","date","expired","costMinimumForVersion","e"],"mappings":"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","file":"transpiled.js","sourcesContent":["/* Abstract class. Instantiate an instance of either SFCryptoJS (uses cryptojs) or SFCryptoWeb (uses web crypto) */\n\nexport class SFAbstractCrypto {\n\n  constructor() {\n    this.DefaultPBKDF2Length = 768;\n  }\n\n  /*\n  Our WebCrypto implementation only offers PBKDf2, so any other encryption\n  and key generation functions must use CryptoJS in this abstract implementation.\n  */\n\n  generateUUIDSync() {\n    var crypto = window.crypto || window.msCrypto;\n    if(crypto) {\n      var buf = new Uint32Array(4);\n      crypto.getRandomValues(buf);\n      var idx = -1;\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          idx++;\n          var r = (buf[idx>>3] >> ((idx%8)*4))&15;\n          var v = c == 'x' ? r : (r&0x3|0x8);\n          return v.toString(16);\n      });\n    } else {\n      var d = new Date().getTime();\n      if(window.performance && typeof window.performance.now === \"function\"){\n        d += performance.now(); //use high-precision timer if available\n      }\n      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n      });\n      return uuid;\n    }\n  }\n\n  async decryptText({ciphertextToAuth, contentCiphertext, encryptionKey, iv, authHash, authKey} = {}, requiresAuth) {\n    if(requiresAuth && !authHash) {\n      console.error(\"Auth hash is required.\");\n      return;\n    }\n\n    if(authHash) {\n      var localAuthHash = await this.hmac256(ciphertextToAuth, authKey);\n      if(authHash !== localAuthHash) {\n        console.error(\"Auth hash does not match, returning null.\");\n        return null;\n      }\n    }\n    var keyData = CryptoJS.enc.Hex.parse(encryptionKey);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var decrypted = CryptoJS.AES.decrypt(contentCiphertext, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n  async encryptText(text, key, iv) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var encrypted = CryptoJS.AES.encrypt(text, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return encrypted.toString();\n  }\n\n  async generateRandomKey(bits) {\n    return CryptoJS.lib.WordArray.random(bits/8).toString();\n  }\n\n  async generateRandomEncryptionKey() {\n    // Key length needs to be 512 in order to decrypt properly on mobile and web.\n    let length = 512; let cost = 1;\n    var salt = await this.generateRandomKey(length);\n    var passphrase = await this.generateRandomKey(length);\n    return this.pbkdf2(passphrase, salt, cost, length);\n  }\n\n  async firstHalfOfKey(key) {\n    return key.substring(0, key.length/2);\n  }\n\n  async secondHalfOfKey(key) {\n    return key.substring(key.length/2, key.length);\n  }\n\n  async base64(text) {\n    return window.btoa(text);\n  }\n\n  async base64Decode(base64String) {\n    return window.atob(base64String);\n  }\n\n  async sha256(text) {\n    return CryptoJS.SHA256(text).toString();\n  }\n\n  async hmac256(message, key) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var messageData = CryptoJS.enc.Utf8.parse(message);\n    var result = CryptoJS.HmacSHA256(messageData, keyData).toString();\n    return result;\n  }\n\n  async generateSalt(identifier, version, cost, nonce) {\n    var result = await this.sha256([identifier, \"SF\", version, cost, nonce].join(\":\"));\n    return result;\n  }\n\n  /** Generates two deterministic keys based on one input */\n  async generateSymmetricKeyPair({password, pw_salt, pw_cost} = {}) {\n    var output = await this.pbkdf2(password, pw_salt, pw_cost, this.DefaultPBKDF2Length);\n    var outputLength = output.length;\n    var splitLength = outputLength/3;\n    var firstThird = output.slice(0, splitLength);\n    var secondThird = output.slice(splitLength, splitLength * 2);\n    var thirdThird = output.slice(splitLength * 2, splitLength * 3);\n    return [firstThird, secondThird, thirdThird];\n  }\n\n  async computeEncryptionKeysForUser(password, authParams) {\n    var pw_salt;\n\n    if(authParams.version == \"003\") {\n      if(!authParams.identifier) {\n        console.error(\"authParams is missing identifier.\");\n        return;\n      }\n      // Salt is computed from identifier + pw_nonce from server\n      pw_salt = await this.generateSalt(authParams.identifier, authParams.version, authParams.pw_cost, authParams.pw_nonce);\n    } else {\n      // Salt is returned from server\n      pw_salt = authParams.pw_salt;\n    }\n\n    return this.generateSymmetricKeyPair({password: password, pw_salt: pw_salt, pw_cost: authParams.pw_cost})\n    .then((keys) => {\n      let userKeys = {pw: keys[0], mk: keys[1], ak: keys[2]};\n      return userKeys;\n     });\n   }\n\n   // Unlike computeEncryptionKeysForUser, this method always uses the latest SF Version\n  async generateInitialKeysAndAuthParamsForUser(identifier, password) {\n    let version = this.SFJS.version;\n    var pw_cost = this.SFJS.defaultPasswordGenerationCost;\n    var pw_nonce = await this.generateRandomKey(256);\n    var pw_salt = await this.generateSalt(identifier, version, pw_cost, pw_nonce);\n\n    return this.generateSymmetricKeyPair({password: password, pw_salt: pw_salt, pw_cost: pw_cost})\n    .then((keys) => {\n      let authParams = {pw_nonce: pw_nonce, pw_cost: pw_cost, identifier: identifier, version: version};\n      let userKeys = {pw: keys[0], mk: keys[1], ak: keys[2]};\n      return {keys: userKeys, authParams: authParams};\n    });\n  }\n\n}\n;export class SFCryptoJS extends SFAbstractCrypto {\n\n  async pbkdf2(password, pw_salt, pw_cost, length) {\n    var params = {\n      keySize: length/32,\n      hasher: CryptoJS.algo.SHA512,\n      iterations: pw_cost\n    }\n\n    return CryptoJS.PBKDF2(password, pw_salt, params).toString();\n  }\n\n}\n;var subtleCrypto = window.crypto ? window.crypto.subtle : null;\n\nexport class SFCryptoWeb extends SFAbstractCrypto {\n\n  /**\n  Internal\n  */\n\n  async pbkdf2(password, pw_salt, pw_cost, length) {\n    var key = await this.webCryptoImportKey(password);\n    if(!key) {\n      console.log(\"Key is null, unable to continue\");\n      return null;\n    }\n\n    return this.webCryptoDeriveBits(key, pw_salt, pw_cost, length);\n  }\n\n  async webCryptoImportKey(input) {\n    return subtleCrypto.importKey(\"raw\", this.stringToArrayBuffer(input), { name: \"PBKDF2\" }, false, [\"deriveBits\"])\n    .then((key) => {\n      return key;\n    })\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n  }\n\n  async webCryptoDeriveBits(key, pw_salt, pw_cost, length) {\n    var params = {\n      \"name\": \"PBKDF2\",\n      salt: this.stringToArrayBuffer(pw_salt),\n      iterations: pw_cost,\n      hash: {name: \"SHA-512\"},\n    }\n\n    return subtleCrypto.deriveBits(params, key, length)\n    .then((bits) => {\n      var key = this.arrayBufferToHexString(new Uint8Array(bits));\n      return key;\n    })\n    .catch((err) => {\n      console.error(err);\n      return null;\n    });\n  }\n\n  stringToArrayBuffer(string) {\n    // not available on Edge/IE\n\n    if(window.TextEncoder) {\n      var encoder = new TextEncoder(\"utf-8\");\n      var result = encoder.encode(string);\n      return result;\n    } else {\n      string = unescape(encodeURIComponent(string));\n      var buf = new ArrayBuffer(string.length);\n      var bufView = new Uint8Array(buf);\n      for (var i=0, strLen=string.length; i<strLen; i++) {\n        bufView[i] = string.charCodeAt(i);\n      }\n      return buf;\n    }\n  }\n\n  arrayBufferToHexString(arrayBuffer) {\n      var byteArray = new Uint8Array(arrayBuffer);\n      var hexString = \"\";\n      var nextHexByte;\n\n      for (var i=0; i<byteArray.byteLength; i++) {\n          nextHexByte = byteArray[i].toString(16);\n          if (nextHexByte.length < 2) {\n              nextHexByte = \"0\" + nextHexByte;\n          }\n          hexString += nextHexByte;\n      }\n      return hexString;\n  }\n}\n;export class SFItemTransformer {\n\n  constructor(crypto) {\n    this.crypto = crypto;\n  }\n\n  async _private_encryptString(string, encryptionKey, authKey, uuid, version) {\n    var fullCiphertext, contentCiphertext;\n    if(version === \"001\") {\n      contentCiphertext = await this.crypto.encryptText(string, encryptionKey, null);\n      fullCiphertext = version + contentCiphertext;\n    } else {\n      var iv = await this.crypto.generateRandomKey(128);\n      contentCiphertext = await this.crypto.encryptText(string, encryptionKey, iv);\n      var ciphertextToAuth = [version, uuid, iv, contentCiphertext].join(\":\");\n      var authHash = await this.crypto.hmac256(ciphertextToAuth, authKey);\n      fullCiphertext = [version, authHash, uuid, iv, contentCiphertext].join(\":\");\n    }\n\n    return fullCiphertext;\n  }\n\n  async encryptItem(item, keys, version = \"003\") {\n    var params = {};\n    // encrypt item key\n    var item_key = await this.crypto.generateRandomEncryptionKey();\n    if(version === \"001\") {\n      // legacy\n      params.enc_item_key = await this.crypto.encryptText(item_key, keys.mk, null);\n    } else {\n      params.enc_item_key = await this._private_encryptString(item_key, keys.mk, keys.ak, item.uuid, version);\n    }\n\n    // encrypt content\n    var ek = await this.crypto.firstHalfOfKey(item_key);\n    var ak = await this.crypto.secondHalfOfKey(item_key);\n    var ciphertext = await this._private_encryptString(JSON.stringify(item.createContentJSONFromProperties()), ek, ak, item.uuid, version);\n    if(version === \"001\") {\n      var authHash = await this.crypto.hmac256(ciphertext, ak);\n      params.auth_hash = authHash;\n    }\n\n    params.content = ciphertext;\n    return params;\n  }\n\n  encryptionComponentsFromString(string, encryptionKey, authKey) {\n    var encryptionVersion = string.substring(0, 3);\n    if(encryptionVersion === \"001\") {\n      return {\n        contentCiphertext: string.substring(3, string.length),\n        encryptionVersion: encryptionVersion,\n        ciphertextToAuth: string,\n        iv: null,\n        authHash: null,\n        encryptionKey: encryptionKey,\n        authKey: authKey\n      }\n    } else {\n      let components = string.split(\":\");\n      return {\n        encryptionVersion: components[0],\n        authHash: components[1],\n        uuid: components[2],\n        iv: components[3],\n        contentCiphertext: components[4],\n        ciphertextToAuth: [components[0], components[2], components[3], components[4]].join(\":\"),\n        encryptionKey: encryptionKey,\n        authKey: authKey\n      }\n    }\n  }\n\n  async decryptItem(item, keys) {\n\n    if(typeof item.content != \"string\") {\n      // Content is already an object, can't do anything with it.\n      return;\n    }\n\n    if(item.content.startsWith(\"000\")) {\n      // is base64 encoded\n      try {\n        item.content = JSON.parse(await this.crypto.base64Decode(item.content.substring(3, item.content.length)));\n      } catch (e) {}\n\n      return;\n    }\n\n    if(!item.enc_item_key) {\n      // This needs to be here to continue, return otherwise\n      console.log(\"Missing item encryption key, skipping decryption.\");\n      return;\n    }\n\n    // decrypt encrypted key\n    var encryptedItemKey = item.enc_item_key;\n    var requiresAuth = true;\n    if(!encryptedItemKey.startsWith(\"002\") && !encryptedItemKey.startsWith(\"003\")) {\n      // legacy encryption type, has no prefix\n      encryptedItemKey = \"001\" + encryptedItemKey;\n      requiresAuth = false;\n    }\n    var keyParams = this.encryptionComponentsFromString(encryptedItemKey, keys.mk, keys.ak);\n\n    // return if uuid in auth hash does not match item uuid. Signs of tampering.\n    if(keyParams.uuid && keyParams.uuid !== item.uuid) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    var item_key = await this.crypto.decryptText(keyParams, requiresAuth);\n\n    if(!item_key) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    // decrypt content\n    var ek = await this.crypto.firstHalfOfKey(item_key);\n    var ak = await this.crypto.secondHalfOfKey(item_key);\n    var itemParams = this.encryptionComponentsFromString(item.content, ek, ak);\n\n    // return if uuid in auth hash does not match item uuid. Signs of tampering.\n    if(itemParams.uuid && itemParams.uuid !== item.uuid) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    if(!itemParams.authHash) {\n      // legacy 001\n      itemParams.authHash = item.auth_hash;\n    }\n\n    var content = await this.crypto.decryptText(itemParams, true);\n    if(!content) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n    } else {\n      if(item.errorDecrypting == true) { item.errorDecryptingValueChanged = true;}\n       // Content should only be set if it was successfully decrypted, and should otherwise remain unchanged.\n      item.errorDecrypting = false;\n      item.content = content;\n    }\n  }\n\n  async decryptMultipleItems(items, keys, throws) {\n    let decrypt = async (item) => {\n      // 4/15/18: Adding item.content == null clause. We still want to decrypt deleted items incase\n      // they were marked as dirty but not yet synced. Not yet sure why we had this requirement.\n      if(item.deleted == true && item.content == null) {\n        return;\n      }\n\n      var isString = typeof item.content === 'string' || item.content instanceof String;\n      if(isString) {\n        try {\n          await this.decryptItem(item, keys);\n        } catch (e) {\n          if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n          item.errorDecrypting = true;\n          if(throws) {\n            throw e;\n          }\n          console.error(\"Error decrypting item\", item, e);\n          return;\n        }\n      }\n    }\n\n    return Promise.all(items.map((item) => {\n      return decrypt(item);\n    }));\n\n  }\n}\n;export class StandardFile {\n  constructor(cryptoInstance) {\n    // This library runs in native environments as well (react native)\n    if(typeof window !== 'undefined' && typeof document !== 'undefined') {\n      // detect IE8 and above, and edge.\n      // IE and Edge do not support pbkdf2 in WebCrypto, therefore we need to use CryptoJS\n      var IEOrEdge = document.documentMode || /Edge/.test(navigator.userAgent);\n\n      if(!IEOrEdge && (window.crypto && window.crypto.subtle)) {\n        this.crypto = new SFCryptoWeb();\n      } else {\n        this.crypto = new SFCryptoJS();\n      }\n    }\n\n    if(cryptoInstance) {\n      this.crypto = cryptoInstance;\n    }\n\n    this.itemTransformer = new SFItemTransformer(this.crypto);\n\n    this.crypto.SFJS = {\n      version : this.version(),\n      defaultPasswordGenerationCost : this.defaultPasswordGenerationCost()\n    }\n  }\n\n  version() {\n    return \"003\";\n  }\n\n  supportsPasswordDerivationCost(cost) {\n    // some passwords are created on platforms with stronger pbkdf2 capabilities, like iOS,\n    // which CryptoJS can't handle here (WebCrypto can however).\n    // if user has high password cost and is using browser that doesn't support WebCrypto,\n    // we want to tell them that they can't login with this browser.\n    if(cost > 5000) {\n      return this.crypto instanceof SFCryptoWeb;\n    } else {\n      return true;\n    }\n  }\n\n  // Returns the versions that this library supports technically.\n  supportedVersions() {\n    return [\"001\", \"002\", \"003\"];\n  }\n\n  isVersionNewerThanLibraryVersion(version) {\n    var libraryVersion = this.version();\n    return parseInt(version) > parseInt(libraryVersion);\n  }\n\n  isProtocolVersionOutdated(version) {\n    // YYYY-MM-DD\n    let expirationDates = {\n      \"001\" : Date.parse(\"2018-01-01\"),\n      \"002\" : Date.parse(\"2019-06-01\"),\n    }\n\n    let date = expirationDates[version];\n    if(!date) {\n      // No expiration date, is active version\n      return false;\n    }\n    let expired = new Date() > date;\n    return expired;\n  }\n\n  costMinimumForVersion(version) {\n    return {\n      \"001\" : 3000,\n      \"002\" : 3000,\n      \"003\" : 110000\n    }[version];\n  }\n\n  defaultPasswordGenerationCost() {\n    return this.costMinimumForVersion(this.version());\n  }\n\n}\n\nif(typeof window !== 'undefined' && window !== null) {\n  // window is for some reason defined in React Native, but throws an exception when you try to set to it\n  try {\n    window.StandardFile = StandardFile;\n    window.SFJS = new StandardFile()\n  } catch (e) { }\n}\n"]}