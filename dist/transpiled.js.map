{"version":3,"sources":["lib.js"],"names":["SFAbstractCrypto","bits","CryptoJS","lib","WordArray","random","toString","crypto","window","msCrypto","buf","Uint32Array","getRandomValues","idx","replace","c","r","v","d","Date","getTime","performance","now","uuid","Math","floor","ciphertextToAuth","contentCiphertext","encryptionKey","iv","authHash","authKey","requiresAuth","console","error","localAuthHash","SFJS","hmac256","keyData","enc","Hex","parse","ivData","decrypted","AES","decrypt","mode","CBC","padding","pad","Pkcs7","Utf8","text","key","encrypted","encrypt","salt","generateRandomKey","passphrase","PBKDF2","keySize","substring","length","btoa","base64String","atob","SHA256","SHA1","message","messageData","result","HmacSHA256","mk","log","password","pw_salt","pw_func","pw_alg","pw_cost","pw_key_size","callback","generateSymmetricKeyPair","keys","pw","_","merge","generateKeysFromMasterKey","bind","email","defaults","defaultPasswordGenerationParams","pw_nonce","sha1","SFCryptoJS","algMapping","algo","SHA512","fnMapping","alg","kdf","output","hasher","iterations","outputLength","firstHalf","slice","secondHalf","subtleCrypto","subtle","SFCryptoWeb","stretchPassword","webCryptoImportKey","webCryptoDeriveBits","input","importKey","stringToArrayBuffer","name","toUpperCase","then","catch","err","deriveBits","hash","arrayBufferToHexString","Uint8Array","string","TextEncoder","encoder","encode","unescape","encodeURIComponent","ArrayBuffer","bufView","i","strLen","charCodeAt","arrayBuffer","byteArray","hexString","nextHexByte","byteLength","SFItemTransformer","version","fullCiphertext","encryptText","join","item","item_key","generateRandomEncryptionKey","enc_item_key","_private_encryptString","ek","firstHalfOfKey","ak","secondHalfOfKey","ciphertext","JSON","stringify","createContentJSONFromProperties","auth_hash","content","baseKey","encryptionVersion","components","split","encryptedItemKey","startsWith","keyParams","encryptionComponentsFromString","decryptText","itemParams","items","throws","deleted","isString","String","decryptItem","base64Decode","e","Item","json_obj","updateFromJSON","observers","Neeto","generateUUID","json","created_at","updated_at","mapContentToLocalProperties","contentObject","dirty","notifyObserversOfChange","allReferencedObjects","forEach","reference","setDirty","observer","find","push","remove","contentObj","structureParams","references","referenceParams","omit","oldUUID","newUUID","newItem","sort","a","b","StandardFile","IEOrEdge","document","documentMode","test","navigator","userAgent"],"mappings":"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","file":"transpiled.js","sourcesContent":["/* Abstract class. Instantiate an instance of either SFCryptoJS (uses cryptojs) or SFCryptoWeb (uses web crypto) */\n\nclass SFAbstractCrypto {\n\n  generateRandomKey(bits) {\n    return CryptoJS.lib.WordArray.random(bits/8).toString();\n  }\n\n  generateUUID() {\n    var crypto = window.crypto || window.msCrypto;\n    if(crypto) {\n      var buf = new Uint32Array(4);\n      crypto.getRandomValues(buf);\n      var idx = -1;\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          idx++;\n          var r = (buf[idx>>3] >> ((idx%8)*4))&15;\n          var v = c == 'x' ? r : (r&0x3|0x8);\n          return v.toString(16);\n      });\n    } else {\n      var d = new Date().getTime();\n      if(window.performance && typeof window.performance.now === \"function\"){\n        d += performance.now(); //use high-precision timer if available\n      }\n      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n      });\n      return uuid;\n    }\n  }\n\n  decryptText({ciphertextToAuth, contentCiphertext, encryptionKey, iv, authHash, authKey} = {}, requiresAuth) {\n    if(requiresAuth && !authHash) {\n      console.error(\"Auth hash is required.\");\n      return;\n    }\n\n    if(authHash) {\n      var localAuthHash = SFJS.crypto.hmac256(ciphertextToAuth, authKey);\n      if(authHash !== localAuthHash) {\n        console.error(\"Auth hash does not match, returning null.\");\n        return null;\n      }\n    }\n    var keyData = CryptoJS.enc.Hex.parse(encryptionKey);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var decrypted = CryptoJS.AES.decrypt(contentCiphertext, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n  encryptText(text, key, iv) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var encrypted = CryptoJS.AES.encrypt(text, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return encrypted.toString();\n  }\n\n  generateRandomEncryptionKey() {\n    var salt = SFJS.crypto.generateRandomKey(512);\n    var passphrase = SFJS.crypto.generateRandomKey(512);\n    return CryptoJS.PBKDF2(passphrase, salt, { keySize: 512/32 }).toString();\n  }\n\n  firstHalfOfKey(key) {\n    return key.substring(0, key.length/2);\n  }\n\n  secondHalfOfKey(key) {\n    return key.substring(key.length/2, key.length);\n  }\n\n  base64(text) {\n    return window.btoa(text);\n  }\n\n  base64Decode(base64String) {\n    return window.atob(base64String);\n  }\n\n  sha256(text) {\n    return CryptoJS.SHA256(text).toString();\n  }\n\n  sha1(text) {\n    return CryptoJS.SHA1(text).toString();\n  }\n\n  hmac256(message, key) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var messageData = CryptoJS.enc.Utf8.parse(message);\n    var result = CryptoJS.HmacSHA256(messageData, keyData).toString();\n    return result;\n  }\n\n  generateKeysFromMasterKey(mk) {\n    console.log(\"From crpyot.js\", SFJS, SFJS.crypto);\n    var encryptionKey = SFJS.crypto.hmac256(mk, CryptoJS.enc.Utf8.parse(\"e\").toString(CryptoJS.enc.Hex));\n    var authKey = SFJS.crypto.hmac256(mk, CryptoJS.enc.Utf8.parse(\"a\").toString(CryptoJS.enc.Hex));\n    return {mk: mk, encryptionKey: encryptionKey, authKey: authKey};\n  }\n\n  computeEncryptionKeysForUser({password, pw_salt, pw_func, pw_alg, pw_cost, pw_key_size} = {}, callback) {\n     this.generateSymmetricKeyPair({password: password, pw_salt: pw_salt,\n       pw_func: pw_func, pw_alg: pw_alg, pw_cost: pw_cost, pw_key_size: pw_key_size}, function(keys){\n         var pw = keys[0];\n         var mk = keys[1];\n\n         callback(_.merge({pw: pw, mk: mk}, this.generateKeysFromMasterKey(mk)));\n       }.bind(this));\n   }\n\n   generateInitialEncryptionKeysForUser({email, password} = {}, callback) {\n     var defaults = this.defaultPasswordGenerationParams();\n     var {pw_func, pw_alg, pw_key_size, pw_cost} = defaults;\n     var pw_nonce = this.generateRandomKey(512);\n     var pw_salt = this.sha1(email + \"SN\" + pw_nonce);\n     _.merge(defaults, {pw_salt: pw_salt, pw_nonce: pw_nonce})\n     this.generateSymmetricKeyPair(_.merge({email: email, password: password, pw_salt: pw_salt}, defaults), function(keys){\n       var pw = keys[0];\n       var mk = keys[1];\n\n       callback(_.merge({pw: pw, mk: mk}, this.generateKeysFromMasterKey(mk)), defaults);\n     }.bind(this));\n   }\n}\n\nexport { SFAbstractCrypto }\n;class SFCryptoJS extends SFAbstractCrypto {\n\n   /** Generates two deterministic keys based on one input */\n   generateSymmetricKeyPair({password, pw_salt, pw_func, pw_alg, pw_cost, pw_key_size} = {}, callback) {\n     var algMapping = {\n       \"sha256\" : CryptoJS.algo.SHA256,\n       \"sha512\" : CryptoJS.algo.SHA512\n     }\n     var fnMapping = {\n       \"pbkdf2\" : CryptoJS.PBKDF2\n     }\n\n     var alg = algMapping[pw_alg];\n     var kdf = fnMapping[pw_func];\n     var output = kdf(password, pw_salt, { keySize: pw_key_size/32, hasher: alg, iterations: pw_cost }).toString();\n\n     var outputLength = output.length;\n     var firstHalf = output.slice(0, outputLength/2);\n     var secondHalf = output.slice(outputLength/2, outputLength);\n     callback([firstHalf, secondHalf])\n   }\n\n   defaultPasswordGenerationParams() {\n     return {pw_func: \"pbkdf2\", pw_alg: \"sha512\", pw_key_size: 512, pw_cost: 3000};\n   }\n }\n\n\nexport { SFCryptoJS }\n;var subtleCrypto = window.crypto ? window.crypto.subtle : null;\n\nclass SFCryptoWeb extends SFAbstractCrypto {\n\n  /**\n  Overrides\n  */\n  defaultPasswordGenerationParams() {\n    return {pw_func: \"pbkdf2\", pw_alg: \"sha512\", pw_key_size: 512, pw_cost: 5000};\n  }\n\n  /** Generates two deterministic keys based on one input */\n  generateSymmetricKeyPair({password, pw_salt, pw_func, pw_alg, pw_cost, pw_key_size} = {}, callback) {\n   this.stretchPassword({password: password, pw_func: pw_func, pw_alg: pw_alg, pw_salt: pw_salt, pw_cost: pw_cost, pw_key_size: pw_key_size}, function(output){\n     var outputLength = output.length;\n     var firstHalf = output.slice(0, outputLength/2);\n     var secondHalf = output.slice(outputLength/2, outputLength);\n     callback([firstHalf, secondHalf]);\n   })\n  }\n\n  /**\n  Internal\n  */\n\n  stretchPassword({password, pw_salt, pw_cost, pw_func, pw_alg, pw_key_size} = {}, callback) {\n\n   this.webCryptoImportKey(password, pw_func, function(key){\n\n     if(!key) {\n       console.log(\"Key is null, unable to continue\");\n       callback(null);\n       return;\n     }\n\n     this.webCryptoDeriveBits({key: key, pw_func: pw_func, pw_alg: pw_alg, pw_salt: pw_salt, pw_cost: pw_cost, pw_key_size: pw_key_size}, function(key){\n       if(!key) {\n         callback(null);\n         return;\n       }\n\n       callback(key);\n\n     }.bind(this))\n   }.bind(this))\n  }\n\n  webCryptoImportKey(input, pw_func, callback) {\n     subtleCrypto.importKey(\n      \"raw\",\n      this.stringToArrayBuffer(input),\n      {name: pw_func.toUpperCase()},\n      false,\n      [\"deriveBits\"]\n    )\n    .then(function(key){\n      callback(key);\n    })\n    .catch(function(err){\n      console.error(err);\n      callback(null);\n    });\n  }\n\n  webCryptoDeriveBits({key, pw_func, pw_alg, pw_salt, pw_cost, pw_key_size} = {}, callback) {\n     var algMapping = {\n       \"sha256\" : \"SHA-256\",\n       \"sha512\" : \"SHA-512\",\n     }\n     var alg = algMapping[pw_alg];\n     subtleCrypto.deriveBits(\n      {\n        \"name\": pw_func.toUpperCase(),\n        salt: this.stringToArrayBuffer(pw_salt),\n        iterations: pw_cost,\n        hash: {name: alg},\n      },\n      key,\n      pw_key_size\n    )\n    .then(function(bits){\n      var key = this.arrayBufferToHexString(new Uint8Array(bits));\n      callback(key);\n    }.bind(this))\n    .catch(function(err){\n      console.error(err);\n      callback(null);\n    });\n  }\n\n  stringToArrayBuffer(string) {\n    // not available on Edge/IE\n    if(window.TextEncoder) {\n      var encoder = new TextEncoder(\"utf-8\");\n      var result = encoder.encode(string);\n      return result;\n    } else {\n      string = unescape(encodeURIComponent(string));\n      var buf = new ArrayBuffer(string.length);\n      var bufView = new Uint8Array(buf);\n      for (var i=0, strLen=string.length; i<strLen; i++) {\n        bufView[i] = string.charCodeAt(i);\n      }\n      return buf;\n    }\n  }\n\n  arrayBufferToHexString(arrayBuffer) {\n      var byteArray = new Uint8Array(arrayBuffer);\n      var hexString = \"\";\n      var nextHexByte;\n\n      for (var i=0; i<byteArray.byteLength; i++) {\n          nextHexByte = byteArray[i].toString(16);\n          if (nextHexByte.length < 2) {\n              nextHexByte = \"0\" + nextHexByte;\n          }\n          hexString += nextHexByte;\n      }\n      return hexString;\n  }\n}\n\nexport { SFCryptoWeb }\n;class SFItemTransformer {\n\n  static _private_encryptString(string, encryptionKey, authKey, version) {\n    var fullCiphertext, contentCiphertext;\n    if(version === \"001\") {\n      contentCiphertext = SFJS.crypto.encryptText(string, encryptionKey, null);\n      fullCiphertext = version + contentCiphertext;\n    } else {\n      var iv = SFJS.crypto.generateRandomKey(128);\n      contentCiphertext = SFJS.crypto.encryptText(string, encryptionKey, iv);\n      var ciphertextToAuth = [version, iv, contentCiphertext].join(\":\");\n      var authHash = SFJS.crypto.hmac256(ciphertextToAuth, authKey);\n      fullCiphertext = [version, authHash, iv, contentCiphertext].join(\":\");\n    }\n\n    return fullCiphertext;\n  }\n\n  static encryptItem(item, keys, version) {\n    // encrypt item key\n    var item_key = SFJS.crypto.generateRandomEncryptionKey();\n    if(version === \"001\") {\n      // legacy\n      item.enc_item_key = SFJS.crypto.encryptText(item_key, keys.mk, null);\n    } else {\n      item.enc_item_key = this._private_encryptString(item_key, keys.encryptionKey, keys.authKey, version);\n    }\n\n    // encrypt content\n    var ek = SFJS.crypto.firstHalfOfKey(item_key);\n    var ak = SFJS.crypto.secondHalfOfKey(item_key);\n    var ciphertext = this._private_encryptString(JSON.stringify(item.createContentJSONFromProperties()), ek, ak, version);\n    if(version === \"001\") {\n      var authHash = SFJS.crypto.hmac256(ciphertext, ak);\n      item.auth_hash = authHash;\n    }\n\n    item.content = ciphertext;\n  }\n\n  static encryptionComponentsFromString(string, baseKey, encryptionKey, authKey) {\n    var encryptionVersion = string.substring(0, 3);\n    if(encryptionVersion === \"001\") {\n      return {\n        contentCiphertext: string.substring(3, string.length),\n        encryptionVersion: encryptionVersion,\n        ciphertextToAuth: string,\n        iv: null,\n        authHash: null,\n        encryptionKey: baseKey,\n        authKey: authKey\n      }\n    } else {\n      let components = string.split(\":\");\n      return {\n        encryptionVersion: components[0],\n        authHash: components[1],\n        iv: components[2],\n        contentCiphertext: components[3],\n        ciphertextToAuth: [components[0], components[2], components[3]].join(\":\"),\n        encryptionKey: encryptionKey,\n        authKey: authKey\n      }\n    }\n  }\n\n  static decryptItem(item, keys) {\n    // decrypt encrypted key\n    var encryptedItemKey = item.enc_item_key;\n    var requiresAuth = true;\n    if(encryptedItemKey.startsWith(\"002\") === false) {\n      // legacy encryption type, has no prefix\n      encryptedItemKey = \"001\" + encryptedItemKey;\n      requiresAuth = false;\n    }\n    var keyParams = this.encryptionComponentsFromString(encryptedItemKey, keys.mk, keys.encryptionKey, keys.authKey);\n    var item_key = SFJS.crypto.decryptText(keyParams, requiresAuth);\n\n    if(!item_key) {\n      return;\n    }\n\n    // decrypt content\n    var ek = SFJS.crypto.firstHalfOfKey(item_key);\n    var ak = SFJS.crypto.secondHalfOfKey(item_key);\n    var itemParams = this.encryptionComponentsFromString(item.content, ek, ek, ak);\n    if(!itemParams.authHash) {\n      itemParams.authHash = item.auth_hash;\n    }\n    var content = SFJS.crypto.decryptText(itemParams, true);\n    item.content = content;\n  }\n\n  static decryptMultipleItems(items, keys, throws) {\n    for (var item of items) {\n     if(item.deleted == true) {\n       continue;\n     }\n\n     var isString = typeof item.content === 'string' || item.content instanceof String;\n     if(isString) {\n       try {\n         if((item.content.startsWith(\"001\") || item.content.startsWith(\"002\")) && item.enc_item_key) {\n           // is encrypted\n           this.decryptItem(item, keys);\n         } else {\n           // is base64 encoded\n           item.content = SFJS.crypto.base64Decode(item.content.substring(3, item.content.length))\n         }\n       } catch (e) {\n         if(throws) {\n           throw e;\n         }\n         console.log(\"Error decrypting item\", item, e);\n         continue;\n       }\n     }\n   }\n  }\n}\n\nwindow.SFItemTransformer = SFItemTransformer;\nexport { SFItemTransformer }\n;class Item {\n\n  constructor(json_obj) {\n\n    this.updateFromJSON(json_obj);\n\n    this.observers = [];\n\n    if(!this.uuid) {\n      this.uuid = Neeto.crypto.generateUUID();\n    }\n  }\n\n  static sortItemsByDate(items) {\n    items.sort(function(a,b){\n      return new Date(b.created_at) - new Date(a.created_at);\n    });\n  }\n\n  get contentObject() {\n    if(!this.content) {\n      return {};\n    }\n\n    if(this.content !== null && typeof this.content === 'object') {\n      // this is the case when mapping localStorage content, in which case the content is already parsed\n      return this.content;\n    }\n\n    try {\n      return JSON.parse(this.content);\n    } catch (e) {\n      console.log(\"Error parsing json\", e);\n      return {};\n    }\n  }\n\n  updateFromJSON(json) {\n    _.merge(this, json);\n\n    this.created_at = this.created_at ? new Date(this.created_at) : new Date();\n    this.updated_at = this.updated_at ? new Date(this.updated_at) : new Date();\n\n    if(json.content) {\n      this.mapContentToLocalProperties(this.contentObject);\n    }\n  }\n\n  setDirty(dirty) {\n    this.dirty = dirty;\n\n    if(dirty) {\n      this.notifyObserversOfChange();\n    }\n  }\n\n  markAllReferencesDirty() {\n    this.allReferencedObjects().forEach(function(reference){\n      reference.setDirty(true);\n    })\n  }\n  addObserver(observer, callback) {\n    if(!_.find(this.observers, observer)) {\n      this.observers.push({observer: observer, callback: callback});\n    }\n  }\n\n  removeObserver(observer) {\n    _.remove(this.observers, {observer: observer})\n  }\n\n  notifyObserversOfChange() {\n    for(var observer of this.observers) {\n      observer.callback(this);\n    }\n  }\n\n  mapContentToLocalProperties(contentObj) {\n\n  }\n\n  createContentJSONFromProperties() {\n    return this.structureParams();\n  }\n\n  referenceParams() {\n    // must override\n  }\n\n  structureParams() {\n    return {references: this.referenceParams()}\n  }\n\n  addItemAsRelationship(item) {\n    // must override\n  }\n\n  removeItemAsRelationship(item) {\n    // must override\n  }\n\n  isBeingRemovedLocally() {\n\n  }\n\n  removeAllRelationships() {\n    // must override\n    this.setDirty(true);\n  }\n\n  locallyClearAllReferences() {\n\n  }\n\n  mergeMetadataFromItem(item) {\n    _.merge(this, _.omit(item, [\"content\"]));\n  }\n\n  informReferencesOfUUIDChange(oldUUID, newUUID) {\n    // optional override\n  }\n\n  potentialItemOfInterestHasChangedItsUUID(newItem, oldUUID, newUUID) {\n    // optional override\n  }\n\n  allReferencedObjects() {\n    // must override\n    return [];\n  }\n}\n\nwindow.Item = Item;\nexport { Item }\n;class StandardFile {\n  constructor() {\n    // detect IE8 and above, and edge.\n    // IE and Edge do not support pbkdf2 in WebCrypto, therefore we need to use CryptoJS\n    var IEOrEdge = document.documentMode || /Edge/.test(navigator.userAgent);\n\n    if(!IEOrEdge && (window.crypto && window.crypto.subtle)) {\n      this.crypto = new SFCryptoWeb();\n    } else {\n      this.crypto = new SFCryptoJS();\n    }\n  }\n}\n\nwindow.StandardFile = StandardFile;\nwindow.SFJS = new StandardFile()\n"]}