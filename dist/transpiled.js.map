{"version":3,"sources":["lib.js"],"names":["SFAbstractCrypto","bits","CryptoJS","lib","WordArray","random","toString","crypto","window","msCrypto","buf","Uint32Array","getRandomValues","idx","replace","c","r","v","d","Date","getTime","performance","now","uuid","Math","floor","ciphertextToAuth","contentCiphertext","encryptionKey","iv","authHash","authKey","requiresAuth","console","error","localAuthHash","SFJS","hmac256","keyData","enc","Hex","parse","ivData","decrypted","AES","decrypt","mode","CBC","padding","pad","Pkcs7","Utf8","text","key","encrypted","encrypt","salt","generateRandomKey","passphrase","PBKDF2","keySize","substring","length","btoa","base64String","atob","SHA256","message","messageData","result","HmacSHA256","cost","SFCryptoWeb","version","libraryVersion","parseInt","costMinimumForVersion","identifier","nonce","sha256","join","password","authParams","callback","pw_salt","generateSalt","pw_cost","pw_nonce","generateSymmetricKeyPair","keys","userKeys","pw","mk","ak","defaultPasswordGenerationCost","SFCryptoJS","output","hasher","algo","SHA512","iterations","outputLength","splitLength","firstThird","slice","secondThird","thirdThird","subtleCrypto","subtle","stretchPassword","webCryptoImportKey","log","webCryptoDeriveBits","bind","input","importKey","stringToArrayBuffer","name","then","catch","err","deriveBits","hash","arrayBufferToHexString","Uint8Array","string","TextEncoder","encoder","encode","unescape","encodeURIComponent","ArrayBuffer","bufView","i","strLen","charCodeAt","arrayBuffer","byteArray","hexString","nextHexByte","byteLength","SFItemTransformer","fullCiphertext","encryptText","item","params","item_key","generateRandomEncryptionKey","enc_item_key","_private_encryptString","ek","firstHalfOfKey","secondHalfOfKey","ciphertext","JSON","stringify","createContentJSONFromProperties","auth_hash","content","encryptionVersion","components","split","startsWith","base64Decode","e","encryptedItemKey","keyParams","encryptionComponentsFromString","errorDecrypting","errorDecryptingValueChanged","decryptText","itemParams","items","throws","deleted","isString","String","decryptItem","StandardFile","IEOrEdge","document","documentMode","test","navigator","userAgent"],"mappings":"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","file":"transpiled.js","sourcesContent":["/* Abstract class. Instantiate an instance of either SFCryptoJS (uses cryptojs) or SFCryptoWeb (uses web crypto) */\n\nclass SFAbstractCrypto {\n\n  version() {\n    return \"003\";\n  }\n\n  generateRandomKey(bits) {\n    return CryptoJS.lib.WordArray.random(bits/8).toString();\n  }\n\n  generateUUID() {\n    var crypto = window.crypto || window.msCrypto;\n    if(crypto) {\n      var buf = new Uint32Array(4);\n      crypto.getRandomValues(buf);\n      var idx = -1;\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          idx++;\n          var r = (buf[idx>>3] >> ((idx%8)*4))&15;\n          var v = c == 'x' ? r : (r&0x3|0x8);\n          return v.toString(16);\n      });\n    } else {\n      var d = new Date().getTime();\n      if(window.performance && typeof window.performance.now === \"function\"){\n        d += performance.now(); //use high-precision timer if available\n      }\n      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n      });\n      return uuid;\n    }\n  }\n\n  decryptText({ciphertextToAuth, contentCiphertext, encryptionKey, iv, authHash, authKey} = {}, requiresAuth) {\n    if(requiresAuth && !authHash) {\n      console.error(\"Auth hash is required.\");\n      return;\n    }\n\n    if(authHash) {\n      var localAuthHash = SFJS.crypto.hmac256(ciphertextToAuth, authKey);\n      if(authHash !== localAuthHash) {\n        console.error(\"Auth hash does not match, returning null.\");\n        return null;\n      }\n    }\n    var keyData = CryptoJS.enc.Hex.parse(encryptionKey);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var decrypted = CryptoJS.AES.decrypt(contentCiphertext, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return decrypted.toString(CryptoJS.enc.Utf8);\n  }\n\n  encryptText(text, key, iv) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var ivData  = CryptoJS.enc.Hex.parse(iv || \"\");\n    var encrypted = CryptoJS.AES.encrypt(text, keyData, { iv: ivData,  mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });\n    return encrypted.toString();\n  }\n\n  generateRandomEncryptionKey() {\n    var salt = SFJS.crypto.generateRandomKey(512);\n    var passphrase = SFJS.crypto.generateRandomKey(512);\n    return CryptoJS.PBKDF2(passphrase, salt, { keySize: 512/32 }).toString();\n  }\n\n  firstHalfOfKey(key) {\n    return key.substring(0, key.length/2);\n  }\n\n  secondHalfOfKey(key) {\n    return key.substring(key.length/2, key.length);\n  }\n\n  base64(text) {\n    return window.btoa(text);\n  }\n\n  base64Decode(base64String) {\n    return window.atob(base64String);\n  }\n\n  sha256(text) {\n    return CryptoJS.SHA256(text).toString();\n  }\n\n  hmac256(message, key) {\n    var keyData = CryptoJS.enc.Hex.parse(key);\n    var messageData = CryptoJS.enc.Utf8.parse(message);\n    var result = CryptoJS.HmacSHA256(messageData, keyData).toString();\n    return result;\n  }\n\n  supportsPasswordDerivationCost(cost) {\n    // some passwords are created on platforms with stronger pbkdf2 capabilities, like iOS,\n    // which CryptoJS can't handle here (WebCrypto can however).\n    // if user has high password cost and is using browser that doesn't support WebCrypto,\n    // we want to tell them that they can't login with this browser.\n    if(cost > 5000) {\n      return this instanceof SFCryptoWeb;\n    } else {\n      return true;\n    }\n  }\n\n  // Returns the versions that this library supports technically.\n  supportedVersions() {\n    return [\"001\", \"002\", \"003\"];\n  }\n\n  isVersionNewerThanLibraryVersion(version) {\n    var libraryVersion = this.version();\n    return parseInt(version) > parseInt(libraryVersion);\n  }\n\n  costMinimumForVersion(version) {\n    return {\n      \"001\" : 3000,\n      \"002\" : 3000,\n      \"003\" : 110000\n    }[version];\n  }\n\n  defaultPasswordGenerationCost() {\n    return this.costMinimumForVersion(this.version());\n  }\n\n  generateSalt(identifier, version, cost, nonce) {\n    return this.sha256([identifier, \"SF\", version, cost, nonce].join(\":\"));\n  }\n\n  computeEncryptionKeysForUser(password, authParams, callback) {\n    var pw_salt;\n    if(authParams.version == \"003\") {\n      // Salt is computed from identifier + pw_nonce from server\n      pw_salt = this.generateSalt(authParams.identifier, authParams.version, authParams.pw_cost, authParams.pw_nonce);\n    } else {\n      // Salt is returned from server\n      pw_salt = authParams.pw_salt;\n    }\n    this.generateSymmetricKeyPair({password: password, pw_salt: pw_salt, pw_cost: authParams.pw_cost}, (keys) => {\n      let userKeys = {pw: keys[0], mk: keys[1], ak: keys[2]};\n      callback(userKeys);\n     });\n   }\n\n   // Unlike computeEncryptionKeysForUser, this method always uses the latest SF Version\n  generateInitialEncryptionKeysForUser(identifier, password, callback) {\n    let version = this.version();\n    var pw_cost = this.defaultPasswordGenerationCost();\n    var pw_nonce = this.generateRandomKey(256);\n    var pw_salt = this.generateSalt(identifier, version, pw_cost, pw_nonce);\n    this.generateSymmetricKeyPair({password: password, pw_salt: pw_salt, pw_cost: pw_cost}, (keys) => {\n      let authParams = {pw_nonce: pw_nonce, pw_cost: pw_cost, identifier: identifier, version: version};\n      let userKeys = {pw: keys[0], mk: keys[1], ak: keys[2]};\n      callback(userKeys, authParams);\n    });\n  }\n\n}\n\nexport { SFAbstractCrypto }\n;class SFCryptoJS extends SFAbstractCrypto {\n\n  /** Generates two deterministic keys based on one input */\n  generateSymmetricKeyPair({password, pw_salt, pw_cost} = {}, callback) {\n    var output = CryptoJS.PBKDF2(password, pw_salt, { keySize: 768/32, hasher: CryptoJS.algo.SHA512, iterations: pw_cost }).toString();\n\n    var outputLength = output.length;\n    var splitLength = outputLength/3;\n    var firstThird = output.slice(0, splitLength);\n    var secondThird = output.slice(splitLength, splitLength * 2);\n    var thirdThird = output.slice(splitLength * 2, splitLength * 3);\n    callback([firstThird, secondThird, thirdThird])\n  }\n }\n\n\nexport { SFCryptoJS }\n;var subtleCrypto = window.crypto ? window.crypto.subtle : null;\n\nclass SFCryptoWeb extends SFAbstractCrypto {\n\n  /**\n  Overrides\n  */\n\n  /** Generates two deterministic keys based on one input */\n  generateSymmetricKeyPair({password, pw_salt, pw_cost} = {}, callback) {\n   this.stretchPassword({password: password, pw_salt: pw_salt, pw_cost: pw_cost}, function(output){\n     var outputLength = output.length;\n     var splitLength = outputLength/3;\n     var firstThird = output.slice(0, splitLength);\n     var secondThird = output.slice(splitLength, splitLength * 2);\n     var thirdThird = output.slice(splitLength * 2, splitLength * 3);\n     callback([firstThird, secondThird, thirdThird])\n   })\n  }\n\n  /**\n  Internal\n  */\n\n  stretchPassword({password, pw_salt, pw_cost} = {}, callback) {\n\n   this.webCryptoImportKey(password, function(key){\n\n     if(!key) {\n       console.log(\"Key is null, unable to continue\");\n       callback(null);\n       return;\n     }\n\n     this.webCryptoDeriveBits({key: key, pw_salt: pw_salt, pw_cost: pw_cost}, function(key){\n       if(!key) {\n         callback(null);\n         return;\n       }\n\n       callback(key);\n\n     }.bind(this))\n   }.bind(this))\n  }\n\n  webCryptoImportKey(input, callback) {\n     subtleCrypto.importKey(\n      \"raw\",\n      this.stringToArrayBuffer(input),\n      {name: \"PBKDF2\"},\n      false,\n      [\"deriveBits\"]\n    )\n    .then(function(key){\n      callback(key);\n    })\n    .catch(function(err){\n      console.error(err);\n      callback(null);\n    });\n  }\n\n  webCryptoDeriveBits({key, pw_salt, pw_cost} = {}, callback) {\n     subtleCrypto.deriveBits(\n      {\n        \"name\": \"PBKDF2\",\n        salt: this.stringToArrayBuffer(pw_salt),\n        iterations: pw_cost,\n        hash: {name: \"SHA-512\"},\n      },\n      key,\n      768\n    )\n    .then(function(bits){\n      var key = this.arrayBufferToHexString(new Uint8Array(bits));\n      callback(key);\n    }.bind(this))\n    .catch(function(err){\n      console.error(err);\n      callback(null);\n    });\n  }\n\n  stringToArrayBuffer(string) {\n    // not available on Edge/IE\n\n    if(window.TextEncoder) {\n      var encoder = new TextEncoder(\"utf-8\");\n      var result = encoder.encode(string);\n      return result;\n    } else {\n      string = unescape(encodeURIComponent(string));\n      var buf = new ArrayBuffer(string.length);\n      var bufView = new Uint8Array(buf);\n      for (var i=0, strLen=string.length; i<strLen; i++) {\n        bufView[i] = string.charCodeAt(i);\n      }\n      return buf;\n    }\n  }\n\n  arrayBufferToHexString(arrayBuffer) {\n      var byteArray = new Uint8Array(arrayBuffer);\n      var hexString = \"\";\n      var nextHexByte;\n\n      for (var i=0; i<byteArray.byteLength; i++) {\n          nextHexByte = byteArray[i].toString(16);\n          if (nextHexByte.length < 2) {\n              nextHexByte = \"0\" + nextHexByte;\n          }\n          hexString += nextHexByte;\n      }\n      return hexString;\n  }\n}\n\nexport { SFCryptoWeb }\n;class SFItemTransformer {\n\n  static _private_encryptString(string, encryptionKey, authKey, uuid, version) {\n    var fullCiphertext, contentCiphertext;\n    if(version === \"001\") {\n      contentCiphertext = SFJS.crypto.encryptText(string, encryptionKey, null);\n      fullCiphertext = version + contentCiphertext;\n    } else {\n      var iv = SFJS.crypto.generateRandomKey(128);\n      contentCiphertext = SFJS.crypto.encryptText(string, encryptionKey, iv);\n      var ciphertextToAuth = [version, uuid, iv, contentCiphertext].join(\":\");\n      var authHash = SFJS.crypto.hmac256(ciphertextToAuth, authKey);\n      fullCiphertext = [version, authHash, uuid, iv, contentCiphertext].join(\":\");\n    }\n\n    return fullCiphertext;\n  }\n\n  static encryptItem(item, keys, version = \"003\") {\n    var params = {};\n    // encrypt item key\n    var item_key = SFJS.crypto.generateRandomEncryptionKey();\n    if(version === \"001\") {\n      // legacy\n      params.enc_item_key = SFJS.crypto.encryptText(item_key, keys.mk, null);\n    } else {\n      params.enc_item_key = this._private_encryptString(item_key, keys.mk, keys.ak, item.uuid, version);\n    }\n\n    // encrypt content\n    var ek = SFJS.crypto.firstHalfOfKey(item_key);\n    var ak = SFJS.crypto.secondHalfOfKey(item_key);\n    var ciphertext = this._private_encryptString(JSON.stringify(item.createContentJSONFromProperties()), ek, ak, item.uuid, version);\n    if(version === \"001\") {\n      var authHash = SFJS.crypto.hmac256(ciphertext, ak);\n      params.auth_hash = authHash;\n    }\n\n    params.content = ciphertext;\n    return params;\n  }\n\n  static encryptionComponentsFromString(string, encryptionKey, authKey) {\n    var encryptionVersion = string.substring(0, 3);\n    if(encryptionVersion === \"001\") {\n      return {\n        contentCiphertext: string.substring(3, string.length),\n        encryptionVersion: encryptionVersion,\n        ciphertextToAuth: string,\n        iv: null,\n        authHash: null,\n        encryptionKey: encryptionKey,\n        authKey: authKey\n      }\n    } else {\n      let components = string.split(\":\");\n      return {\n        encryptionVersion: components[0],\n        authHash: components[1],\n        uuid: components[2],\n        iv: components[3],\n        contentCiphertext: components[4],\n        ciphertextToAuth: [components[0], components[2], components[3], components[4]].join(\":\"),\n        encryptionKey: encryptionKey,\n        authKey: authKey\n      }\n    }\n  }\n\n  static decryptItem(item, keys) {\n\n    if(typeof item.content != \"string\") {\n      // Content is already an object, can't do anything with it.\n      return;\n    }\n\n    if(item.content.startsWith(\"000\")) {\n      // is base64 encoded\n      try {\n        item.content = JSON.parse(SFJS.crypto.base64Decode(item.content.substring(3, item.content.length)));\n      } catch (e) {}\n\n      return;\n    }\n\n    if(!item.enc_item_key) {\n      // This needs to be here to continue, return otherwise\n      console.log(\"Missing item encryption key, skipping decryption.\");\n      return;\n    }\n\n    // decrypt encrypted key\n    var encryptedItemKey = item.enc_item_key;\n    var requiresAuth = true;\n    if(!encryptedItemKey.startsWith(\"002\") && !encryptedItemKey.startsWith(\"003\")) {\n      // legacy encryption type, has no prefix\n      encryptedItemKey = \"001\" + encryptedItemKey;\n      requiresAuth = false;\n    }\n    var keyParams = this.encryptionComponentsFromString(encryptedItemKey, keys.mk, keys.ak);\n\n    // return if uuid in auth hash does not match item uuid. Signs of tampering.\n    if(keyParams.uuid && keyParams.uuid !== item.uuid) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    var item_key = SFJS.crypto.decryptText(keyParams, requiresAuth);\n\n    if(!item_key) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    // decrypt content\n    var ek = SFJS.crypto.firstHalfOfKey(item_key);\n    var ak = SFJS.crypto.secondHalfOfKey(item_key);\n    var itemParams = this.encryptionComponentsFromString(item.content, ek, ak);\n\n    // return if uuid in auth hash does not match item uuid. Signs of tampering.\n    if(itemParams.uuid && itemParams.uuid !== item.uuid) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n      return;\n    }\n\n    if(!itemParams.authHash) {\n      // legacy 001\n      itemParams.authHash = item.auth_hash;\n    }\n\n    var content = SFJS.crypto.decryptText(itemParams, true);\n    if(!content) {\n      if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n      item.errorDecrypting = true;\n    } else {\n      if(item.errorDecrypting == true) { item.errorDecryptingValueChanged = true;}\n       // Content should only be set if it was successfully decrypted, and should otherwise remain unchanged.\n      item.errorDecrypting = false;\n      item.content = content;\n    }\n  }\n\n  static decryptMultipleItems(items, keys, throws) {\n    for (var item of items) {\n\n     // 4/15/18: Adding item.content == null clause. We still want to decrypt deleted items incase\n     // they were marked as dirty but not yet synced. Not yet sure why we had this requirement.\n     if(item.deleted == true && item.content == null) {\n       continue;\n     }\n\n     var isString = typeof item.content === 'string' || item.content instanceof String;\n     if(isString) {\n       try {\n         this.decryptItem(item, keys);\n       } catch (e) {\n         if(!item.errorDecrypting) { item.errorDecryptingValueChanged = true;}\n         item.errorDecrypting = true;\n         if(throws) {\n           throw e;\n         }\n         console.error(\"Error decrypting item\", item, e);\n         continue;\n       }\n     }\n   }\n  }\n}\n\nwindow.SFItemTransformer = SFItemTransformer;\nexport { SFItemTransformer }\n;class StandardFile {\n  constructor() {\n    // detect IE8 and above, and edge.\n    // IE and Edge do not support pbkdf2 in WebCrypto, therefore we need to use CryptoJS\n    var IEOrEdge = document.documentMode || /Edge/.test(navigator.userAgent);\n\n    if(!IEOrEdge && (window.crypto && window.crypto.subtle)) {\n      this.crypto = new SFCryptoWeb();\n    } else {\n      this.crypto = new SFCryptoJS();\n    }\n  }\n}\n\nwindow.StandardFile = StandardFile;\nwindow.SFJS = new StandardFile()\n"]}